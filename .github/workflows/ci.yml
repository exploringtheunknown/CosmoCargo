name: CosmoCargo CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Backend - Restore dependencies
        run: dotnet restore ./backend

      - name: Backend - Build
        run: dotnet build ./backend --no-restore

      - name: Backend - Test
        run: dotnet test ./backend --no-build --verbosity normal

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Frontend - Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Frontend - Lint
        working-directory: ./frontend
        run: npm run lint

      - name: Frontend - Test
        working-directory: ./frontend
        run: npm test

  build-docker:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        run: |
          cd infrastructure
          docker-compose --env-file .env.production build
          
          # Tagga images
          docker tag infrastructure-frontend:latest ghcr.io/${{ github.repository }}/frontend:${{ github.sha }}
          docker tag infrastructure-backend:latest ghcr.io/${{ github.repository }}/backend:${{ github.sha }}
          docker tag infrastructure-frontend:latest ghcr.io/${{ github.repository }}/frontend:latest
          docker tag infrastructure-backend:latest ghcr.io/${{ github.repository }}/backend:latest
          
          # Pusha images
          docker push ghcr.io/${{ github.repository }}/frontend:${{ github.sha }}
          docker push ghcr.io/${{ github.repository }}/backend:${{ github.sha }}
          docker push ghcr.io/${{ github.repository }}/frontend:latest
          docker push ghcr.io/${{ github.repository }}/backend:latest

  deploy-production:
    needs: build-docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Deploy to production
        run: echo "HÃ¤r kommer din production deployment-logik"